{
    "collab_server" : "",
    "contents" : "#########################################################################################################\n## The script performed gene module meta-analysis on discovery cohorts to detect signiture gene\n## modules significantly defferent between high responders and low responders to flu vaccination\n## in HIPC signature project. The identifiedy gene modules were then verified by the validation cohort.\n#########################################################################################################\n##\n## Original Author: Hailong Meng\n## Updated last by Hailong: 2016-11-18\n## ? 2016 Yale University. All rights reserved.\n## Refactoring Author: Evan henrich (Fred Hutch), March 2017\n#########################################################################################################\n\n# EH NOTE:\n# This version is heavily refactored and much of the eset adjustment is done in ImmSig_Pipeline_Demo.Rmd.\n\n#---------HELPER METHODS--------------------------------------------------\n\nadjust_eset <- function(eset, cohort){\n  storageMode(assayData(eset)) <- \"list\" ## change from \"lockedEnvironment\" to modify assayData\n  hai_var <- grep(\"^((fc)|(d0))_\", varLabels(eset), value = TRUE) ## Select correct PhenoData\n\n  if( cohort == 'young'){\n    oppo <- \"old\"\n    cap_cohort <- \"Young\"\n  }else{\n    oppo <- \"young\"\n    cap_cohort <- \"Old\"\n  }\n\n  eset <- eset[, eset$Age.class %in% cohort] # set in adjust_hai\n  phenoData(eset) <- phenoData(eset)[, setdiff(varLabels(eset),\n                                               c(hai_var, paste0(oppo, \"_\", hai_var)))]\n  varLabels(eset) <- gsub(paste0(\"^\", cohort, \"_\"), '', varLabels(eset))\n  storageMode(assayData(eset)) <- \"lockedEnvironment\"\n  return(eset)\n}\n\n# Must sink to stop many print statements in qusage() from showing in report\nrun_qusage <- function(raw_eset, cohort, sdy, endPoint, gene_set){\n  adj_eset <- adjust_eset(raw_eset, cohort)\n  expr_mat <- exprs(adj_eset)\n  rownames(expr_mat)  <- as.character(fData(adj_eset)[[\"gene_symbol\"]])\n  labels <- as.character(pData(adj_eset)[ , endPoint ])\n\n  sink(tempfile())\n  result <- qusage(expr_mat, labels, \"2-0\", gene_set)\n  sink(NULL)\n\n  return(result)\n}\n\n#***********MAIN METHOD***************************************************************\n#' Function to perform meta analysis for HIPC ImmuneSignatures Project\n#'\n#' @param eset_list list of expressionSet objects holding GE, HAI data\n#' @param cohort Study cohort, young or old\n#' @export\n\nmeta_analysis <- function(eset_list, cohort){\n\n  # original manuscript params\n  FDR.cutoff <- 0.5\n  pvalue.cutoff <- 0.01\n  endPoint <- \"fc_res_max_d30\"\n\n  result_dfs <- list() # holds output tables for use with markdown\n\n  discoverySDY = c('SDY212','SDY63','SDY404','SDY400')\n  validation.sdy <- ifelse(cohort == 'young', \"SDY80\", \"SDY67\")\n\n  gene_set <- updatedGeneSetDb # Using GMT with aliases mapped to official symbols using org.Hs.eq.db\n\n  #########################################################################################################\n  ##\n  ## 2. Identify gene modules significantly different between high responders and low responders from\n  ## discovery cohorts\n  #########################################################################################################\n\n  quSageObjList <- list() ## save gene module analysis result for each SDY\n  idx <- 0\n\n  for(sdy in discoverySDY){\n    idx <- idx + 1\n    quSageObjList[[idx]] <- run_qusage(eset_list[[sdy]], cohort, sdy, endPoint, gene_set)\n  }\n\n  ## gene module meta analysis\n  combinePDFsResult <- combinePDFs(quSageObjList, n.points = 2^14)\n\n  ## p values for gene module meta analysis\n  combined.p <- pdf.pVal(combinePDFsResult)\n  combined.q <- p.adjust(combined.p, method=\"BH\")\n  index_sig <- intersect(which(combined.q < FDR.cutoff), which(combined.p < pvalue.cutoff))\n\n  ## get gene module activity\n  combined.PDF <- combinePDFsResult$path.PDF\n  pathway.activity <- c()\n\n  for (i in 1:length(combined.p)){\n    x.coordinates <- getXcoords(combinePDFsResult,i)\n    tmp <- x.coordinates[which(combined.PDF[,i] == max(combined.PDF[,i],na.rm=TRUE))]\n    pathway.activity <- c(pathway.activity, tmp)\n  }\n\n  out_matrix <- cbind(Pvalue = combined.p,\n                      FDR = combined.q,\n                      pathwayActivity = pathway.activity)\n\n  rownames(out_matrix) = colnames(combinePDFsResult$path.PDF)\n\n  cat(paste0(\"DISCOVERY GROUP - SIGNIFICANT PATHWAY FIGURES\"))\n\n  result_dfs$dsc <- as.data.frame(out_matrix)\n\n  for(i in index_sig){\n    plot(combinePDFsResult, path.index = i)\n    legend(\"topleft\", legend=c(discoverySDY,\"metaAnalysis\"),\n           lty=1, col=c(\"#E41A1C\",\"#377EB8\",\"#4DAF4A\",\"#984EA3\",\"black\"))\n    text(0.2, 1, paste(\"P value =\", format(combined.p[i], digits=2),sep=\"\"))\n  }\n\n\n  #########################################################################################################\n  ##\n  ## 3. Validate significantly different gene modules between high responders and low responders\n  ##\n  #########################################################################################################\n\n  qs.results <- run_qusage(eset_list[[validation.sdy]], cohort, validation.sdy, endPoint, gene_set)\n\n  pvalue <- pdf.pVal(qs.results)[index_sig]\n  qvalue <- p.adjust(pvalue, method = \"BH\")\n  pathway.activity.selected <- qs.results$path.mean[index_sig]\n\n  out_matrix <- cbind(pvalue, qvalue, pathway.activity.selected)\n  rownames(out_matrix) <- names(gene_set)[index_sig] # equal to selected.pathways\n\n  # cat(paste0(\"VALIDATION STUDY - SIGNFICANT PATHWAY FIGURES\"))\n\n  result_dfs$val <- as.data.frame(out_matrix)\n\n  # # Not effective part of Display, therefore commenting out for UI work -- plot graphs\n  # for(i in index_sig){\n  #   plot(qs.results,\n  #        path.index = i,\n  #        col = \"black\",\n  #        xlim = c(-1,1),\n  #        ylim = c(0,10),\n  #        xlab = \"Gene Module Activity\",\n  #        main = names(geneSetDB)[i]\n  #   )\n  #   text(0.2,\n  #        1,\n  #        paste(\"p value =\",\n  #              round(pdf.pVal(qs.results)[i], digits = 3),\n  #              sep = \" \"))\n  #   abline(v = 0, lty = 2)\n  # }\n\n  return(result_dfs)\n}\n\n#-----DEPRECATED------------------\n\n# **original genesetDB work\n# Parse Gene Module that is preloaded as part of package\n# gene_set <- strsplit(geneSetDB,\"\\t\")            ## convert from vector of strings to a list\n# names(gene_set) <- sapply(gene_set,\"[\",1)      ## move the names column as the names of the list\n# gene_set <- lapply(gene_set, \"[\",-1:-2)        ## remove name and description columns\n# gene_set <- lapply(gene_set, function(x){ x[which(x!=\"\")] })      ## remove empty strings\n",
    "created" : 1491603411176.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1867174308",
    "id" : "61630C44",
    "lastKnownWriteTime" : 1491237961,
    "last_content_update" : 1491237961,
    "path" : "~/R/ImmSig2/R/Meta_Analysis_Demo.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 10,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}